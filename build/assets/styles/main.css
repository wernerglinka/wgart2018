@charset "UTF-8";
@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700");
@font-face {
  font-family: 'msSandbox';
  src: url("../fonts/msSandbox.eot?gdq7ki");
  src: url("../fonts/msSandbox.eot?gdq7ki#iefix") format("embedded-opentype"), url("../fonts/msSandbox.ttf?gdq7ki") format("truetype"), url("../fonts/msSandbox.woff?gdq7ki") format("woff"), url("../fonts/msSandbox.svg?gdq7ki#msSandbox") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'msSandbox' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-connection:before {
  content: ""; }

.icon-code:before {
  content: ""; }

.icon-feed:before {
  content: ""; }

.icon-checkmark:before {
  content: ""; }

.icon-user:before {
  content: ""; }

.icon-envelope:before {
  content: ""; }

.icon-search:before {
  content: ""; }

.icon-close:before {
  content: ""; }

.icon-play:before {
  content: ""; }

.icon-facebook:before {
  content: ""; }

.icon-github:before {
  content: ""; }

.icon-linkedin:before {
  content: ""; }

.icon-twitter:before {
  content: ""; }

.icon-youtube:before {
  content: ""; }

.icon-chevron-east:before {
  content: ""; }

.icon-chevron-north:before {
  content: ""; }

.icon-chevron-south:before {
  content: ""; }

.icon-chevron-west:before {
  content: ""; }

* {
  box-sizing: border-box; }

*:before,
*:after {
  box-sizing: inherit; }

body {
  font-family: "Roboto", sans-serif;
  font-size: 100%;
  color: #626262;
  background-color: #fff;
  padding: 0;
  margin: 0; }

h1, h2, h3, h4 {
  font-family: "Montserrat", sans-serif;
  color: #c5c5c5; }

h1 {
  font-size: 1.75em;
  font-weight: 300; }

h2 {
  font-size: 1.5em;
  font-weight: 300; }

h3 {
  color: #626262;
  font-size: 1em;
  font-weight: 600;
  line-height: 1.5625;
  margin-bottom: 0; }

h1 + h4 {
  font-size: 1.25em;
  font-weight: 600; }

p {
  color: #626262;
  font-size: 1em;
  line-height: 1.4; }
  p.attribution {
    font-size: 80%;
    font-style: italic; }

input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

a {
  color: #f00;
  text-decoration: none;
  cursor: pointer;
  transition: color, background-color 0.5s; }
  a:hover, a:focus {
    text-decoration: none; }

.clearfix:before, .clearfix:after,
.container:before,
.container:after {
  content: " ";
  display: table; }

.clearfix:after,
.container:after {
  clear: both; }

.container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 30px; }

img {
  max-width: 100%;
  height: auto;
  display: inline-block; }

hr {
  margin: 1em 0; }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0; }

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto; }

[role="button"] {
  cursor: pointer; }

.pull-left {
  float: left; }

.pull-right {
  float: right; }

[disabled],
.is-disabled {
  color: #ccc !important; }

.has-highlight {
  background-color: #f4f4f4 !important; }

.nowrap {
  white-space: nowrap;
  font-size: 1em !important; }

blockquote {
  padding: 20px;
  background-color: #f5f5f5;
  font-style: italic; }

.wide-screen-only {
  display: block; }

.narrow-screen-only {
  display: none; }

@media (max-width: 768px) {
  .wide-screen-only {
    display: none; }
  .narrow-screen-only {
    display: block; } }

.has-border {
  border: 1px solid #f0f0f0; }

.loader,
.loader:after {
  border-radius: 50%;
  width: 10em;
  height: 10em; }

.loader {
  margin: 60px auto;
  font-size: 10px;
  position: relative;
  text-indent: -9999em;
  border-top: 1.1em solid rgba(239, 22, 20, 0.2);
  border-right: 1.1em solid rgba(239, 22, 20, 0.2);
  border-bottom: 1.1em solid rgba(239, 22, 20, 0.2);
  border-left: 1.1em solid #ef1614;
  transform: translateZ(0);
  animation: load8 1.1s infinite linear; }

@keyframes load8 {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

.top-message {
  position: absolute;
  top: 0;
  z-index: 1000;
  width: 100%;
  height: 50px;
  line-height: 50px;
  padding: 0 20px;
  text-align: center;
  color: #626262;
  background-color: rgba(51, 51, 51, 0.7);
  overflow: hidden;
  border-bottom: 1px solid #fff; }
  .top-message span {
    display: inline;
    font-family: "Roboto", sans-serif;
    font-weight: 300;
    font-size: 1.125em;
    line-height: inherit;
    color: inherit;
    text-decoration: none; }
    .top-message span a {
      font-size: inherit; }

.navActive .top-message {
  display: none; }

header {
  position: fixed;
  top: 0;
  z-index: 1000;
  width: 100%;
  height: 80px;
  background-color: rgba(51, 51, 51, 0.7);
  transition: background-color 0.5s; }

.main-logo {
  float: left;
  line-height: 80px;
  font-family: "Montserrat", sans-serif;
  font-size: 32px;
  color: #fff; }
  @media (max-width: 375px) {
    .main-logo {
      font-size: 24px; } }

.top-message + header {
  position: absolute;
  top: 50px; }
  .top-message + header.isFixed {
    position: fixed;
    top: 0;
    z-index: 1000; }

.main-navigation {
  position: fixed;
  top: 80px;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1000;
  background-color: rgba(51, 51, 51, 0.7);
  margin: 0 0;
  display: none; }
  .main-navigation .main-menu {
    padding: 40px;
    margin-top: 60px;
    transition: margin 1s; }
    .main-navigation .main-menu > li a, .main-navigation .main-menu > li span {
      display: block;
      font-size: 1.5em;
      line-height: 5em;
      color: #f00;
      text-align: center; }
      .main-navigation .main-menu > li a:hover, .main-navigation .main-menu > li span:hover {
        cursor: pointer; }
    .main-navigation .main-menu .dropdown-menu {
      position: static;
      float: none;
      border: none;
      padding-bottom: 20px;
      background: none; }
      .main-navigation .main-menu .dropdown-menu a {
        font-size: 1.14286em;
        line-height: 3em;
        color: #f00;
        padding-left: 60px; }
  .main-navigation li {
    display: block; }
    .main-navigation li.has-bottom-border {
      border-bottom: 1px solid #f00; }

.top-message + header .main-navigation {
  top: 150px; }

.navActive .main-navigation .main-menu > li > a .icon,
.navActive .main-navigation .main-menu > li > span .icon {
  font-size: 18px;
  line-height: 34px; }
  .navActive .main-navigation .main-menu > li > a .icon.icon-chevron-south, .navActive .main-navigation .main-menu > li > a .icon.icon-chevron-east,
  .navActive .main-navigation .main-menu > li > span .icon.icon-chevron-south,
  .navActive .main-navigation .main-menu > li > span .icon.icon-chevron-east {
    display: inline-block; }
  .navActive .main-navigation .main-menu > li > a .icon.icon-chevron-north,
  .navActive .main-navigation .main-menu > li > span .icon.icon-chevron-north {
    display: none; }

.navActive .main-navigation .main-menu > li.stayOpen > a .icon.icon-chevron-south,
.navActive .main-navigation .main-menu > li.stayOpen > span .icon.icon-chevron-south {
  display: none; }

.navActive .main-navigation .main-menu > li.stayOpen > a .icon.icon-chevron-north,
.navActive .main-navigation .main-menu > li.stayOpen > span .icon.icon-chevron-north {
  display: inline-block; }

.hamburger {
  position: relative;
  top: 20px;
  float: right;
  width: 35px;
  height: 35px;
  cursor: pointer;
  background: none;
  border: none; }
  .hamburger:focus {
    outline: 0; }
  .hamburger span,
  .hamburger span:before,
  .hamburger span:after {
    cursor: pointer;
    border-radius: 1px;
    height: 3px;
    width: 35px;
    background: white;
    position: absolute;
    top: 15px;
    display: block;
    content: '';
    transition: all 500ms ease-in-out; }
  .hamburger span:before {
    top: -10px; }
  .hamburger span:after {
    top: auto;
    bottom: -10px; }
  .hamburger:hover span,
  .hamburger:hover span:before,
  .hamburger:hover span:after {
    background: #f00; }

.navActive .hamburger span {
  background-color: transparent; }

.navActive .hamburger span:before,
.navActive .hamburger span:after {
  top: 0; }

.navActive .hamburger span:before {
  transform: rotate(45deg); }

.navActive .hamburger span:after {
  transform: rotate(-45deg); }

.navActive .hamburger:hover span:before,
.navActive .hamburger:hover span:after {
  background: #f00; }

ul, ol {
  margin: 0;
  padding: 0; }
  ul li, ol li {
    color: inherit;
    padding: 0;
    margin: 0; }

.list-unstyled {
  list-style: none; }

.list-inline {
  list-style: none; }
  .list-inline > li {
    display: inline-block; }

#toTop {
  display: block;
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1000;
  transition: all .5s ease 0s;
  cursor: pointer;
  width: 60px;
  height: 60px;
  border: 1px solid #ccc;
  line-height: 60px;
  text-align: center;
  background-color: rgba(255, 255, 255, 0.8);
  color: #f00; }

.main-slides {
  height: 100vh;
  width: 100vw;
  position: relative; }
  .main-slides > li {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    width: 100%;
    height: 100%; }
    .main-slides > li.title {
      z-index: 2;
      top: 40%;
      height: auto; }
      .main-slides > li.title h1 {
        max-width: 1280px;
        margin: 0 auto;
        padding: 0 30px;
        text-align: right;
        color: #fff;
        font-size: 5vw; }
        @media (max-width: 1250px) {
          .main-slides > li.title h1 {
            font-size: 6vw; } }
        @media (max-width: 1000px) {
          .main-slides > li.title h1 {
            font-size: 7vw; } }
        @media (max-width: 600px) {
          .main-slides > li.title h1 {
            font-size: 8vw; } }
    .main-slides > li img {
      width: 100%;
      height: 100%;
      object-fit: cover; }

.section-container h1 {
  text-align: center;
  color: #333;
  font-size: 36px;
  padding: 40px 0; }
  .section-container h1:before, .section-container h1:after {
    content: "//";
    font-size: bold;
    padding: 0 20px;
    color: red; }

.block-container {
  padding-bottom: 100px; }

.series-container {
  width: 1000px;
  min-height: 500px;
  margin: 0 auto;
  display: -ms-flexbox;
  display: flex; }
  @media (max-width: 1000px) {
    .series-container {
      width: 100%;
      margin-bottom: 50px; } }
  @media (max-width: 600px) {
    .series-container {
      display: block;
      min-height: 0; } }
  .series-container:first-of-type {
    margin-top: 50px; }
  .series-container > * {
    width: 50%;
    overflow: hidden; }
    @media (max-width: 600px) {
      .series-container > * {
        width: 100%; } }

.series-container:nth-child(even) .series-artwork {
  -ms-flex-order: 2;
      order: 2; }

.series-description {
  padding: 30px; }
  @media (max-width: 1000px) {
    .series-description {
      padding-top: 0; }
      .series-description h2 {
        margin-top: 0; } }

.series-artwork {
  position: relative; }
  @media (max-width: 600px) {
    .series-artwork {
      width: 80vw;
      height: 80vw;
      margin: 0 auto 30px; }
      .series-artwork.has-border {
        border: none; } }
  .series-artwork li {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    opacity: 0; }
    .series-artwork li:first-child {
      opacity: 1; }

.about-container {
  max-width: 1600px;
  margin: 0 auto;
  padding-bottom: 100px; }
  .about-container .about-description {
    padding: 30px; }
    .about-container .about-description img {
      float: right;
      margin: 0 0 30px 50px; }
      @media (max-width: 1000px) {
        .about-container .about-description img {
          width: 50%; } }
      @media (max-width: 1000px) {
        .about-container .about-description img {
          width: 50%;
          margin: 0 auto 50px;
          display: block;
          float: none; } }
      @media (max-width: 600px) {
        .about-container .about-description img {
          width: 80vw; } }
    .about-container .about-description p:first-of-type {
      margin-top: 0; }

.contact-container {
  height: 300px;
  background-image: url("/assets/images/site-images/contact-bg.jpg");
  background-position: 50% 50%;
  text-align: center;
  color: #fff;
  line-height: 1.5; }
  .contact-container h1 {
    color: #fff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwibWFpbi5zY3NzIiwiaWNvbnMvc3R5bGUuc2NzcyIsImljb25zL3ZhcmlhYmxlcy5zY3NzIiwiX2Jhc2Uuc2NzcyIsIl92YXJpYWJsZXMuc2NzcyIsImNvbXBvbmVudHMvX2xvYWRlci5zY3NzIiwiY29tcG9uZW50cy9fdG9wLW1lc3NhZ2Uuc2NzcyIsImNvbXBvbmVudHMvX2hlYWRlci5zY3NzIiwiY29tcG9uZW50cy9fbGlzdHMuc2NzcyIsImNvbXBvbmVudHMvX3RvLXRvcC5zY3NzIiwiY29tcG9uZW50cy9fbWFpbi1zbGlkZXIuc2NzcyIsImNvbXBvbmVudHMvX2NvbnRhaW5lcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7QUNBakIsaUZBQVk7QUNFWjtFQUNFLHlCQUF3QjtFQUN4QiwwQ0FBdUQ7RUFDdkQseVBBRzJFO0VBQzNFLG9CQUFtQjtFQUNuQixtQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxnRkFBZ0Y7RUFDaEYsb0NBQW1DO0VBQ25DLFlBQVc7RUFDWCxtQkFBa0I7RUFDbEIsb0JBQW1CO0VBQ25CLHFCQUFvQjtFQUNwQixxQkFBb0I7RUFDcEIsZUFBYztFQUVkLHVDQUF1QztFQUN2QyxvQ0FBbUM7RUFDbkMsbUNBQWtDLEVBQ25DOztBQUVEO0VBRUksYUM1QnFCLEVBQUE7O0FEK0J6QjtFQUVJLGFDaENlLEVBQUE7O0FEbUNuQjtFQUVJLGFDcENlLEVBQUE7O0FEdUNuQjtFQUVJLGFDeENvQixFQUFBOztBRDJDeEI7RUFFSSxhQzVDZSxFQUFBOztBRCtDbkI7RUFFSSxhQ2hEbUIsRUFBQTs7QURtRHZCO0VBRUksYUNwRGlCLEVBQUE7O0FEdURyQjtFQUVJLGFDeERnQixFQUFBOztBRDJEcEI7RUFFSSxhQzVEZSxFQUFBOztBRCtEbkI7RUFFSSxhQ2hFbUIsRUFBQTs7QURtRXZCO0VBRUksYUNwRWlCLEVBQUE7O0FEdUVyQjtFQUVJLGFDeEVtQixFQUFBOztBRDJFdkI7RUFFSSxhQzVFa0Is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USxZQUFXO01BQ1gsYUFBWTtNQUNaLG9CQUFtQixFQWtCMUI7TUF4QkQ7UUFTWSxhQUFZLEVBQ2YsRUFBQTtFQVZUO0lBY1EsbUJBQWtCO0lBQ2xCLE9BQU07SUFDTixRQUFPO0lBQ1AsV0FBVTtJQUNWLFdBQVUsRUFLYjtJQXZCTDtNQXFCWSxXQUFVLEVBQ2I7O0FBS1Q7RUFDSSxrQkFBaUI7RUFDakIsZUFBYztFQUNkLHNCQUFxQixFQTJCeEI7RUE5QkQ7SUFNUSxjQUFhLEVBdUJoQjtJQTdCTDtNQVNZLGFBQVk7TUFDWixzQkFBcUIsRUFjeEI7TUFaRztRQVpaO1VBYWdCLFdBQVUsRUFXakIsRUFBQTtNQVRHO1FBZlo7VUFnQmdCLFdBQVU7VUFDVixvQkFBbUI7VUFDbkIsZUFBYztVQUNkLFlBQVcsRUFLbEIsRUFBQTtNQUhHO1FBckJaO1VBc0JnQixZQUFXLEVBRWxCLEVBQUE7SUF4QlQ7TUEyQlksY0FBYSxFQUNoQjs7QUFJVDtFQUNJLGNBQWE7RUFDYixtRUFBa0U7RUFDbEUsNkJBQTRCO0VBQzVCLG1CQUFrQjtFQUNsQixZUG5INEM7RU9vSDVDLGlCQUFnQixFQUtuQjtFQVhEO0lBU1EsWVB2SHdDLEVPd0gzQyIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2FuczozMDAsNDAwLDYwMCw3MDBcIik7XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdtc1NhbmRib3gnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL21zU2FuZGJveC5lb3Q/Z2RxN2tpXCIpO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL21zU2FuZGJveC5lb3Q/Z2RxN2tpI2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9tc1NhbmRib3gudHRmP2dkcTdraVwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvbXNTYW5kYm94LndvZmY/Z2RxN2tpXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL21zU2FuZGJveC5zdmc/Z2RxN2tpI21zU2FuZGJveFwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG4uaWNvbiB7XG4gIC8qIHVzZSAhaW1wb3J0YW50IHRvIHByZXZlbnQgaXNzdWVzIHdpdGggYnJvd3NlciBleHRlbnNpb25zIHRoYXQgY2hhbmdlIGZvbnRzICovXG4gIGZvbnQtZmFtaWx5OiAnbXNTYW5kYm94JyAhaW1wb3J0YW50O1xuICBzcGVhazogbm9uZTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXZhcmlhbnQ6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICAvKiBCZXR0ZXIgRm9udCBSZW5kZXJpbmcgPT09PT09PT09PT0gKi9cbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7IH1cblxuLmljb24tY29ubmVjdGlvbjpiZWZvcmUge1xuICBjb250ZW50OiBcIu6kj1wiOyB9XG5cbi5pY29uLWNvZGU6YmVmb3JlIHtcbiAgY29udGVudDogXCLupJBcIjsgfVxuXG4uaWNvbi1mZWVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7qSRXCI7IH1cblxuLmljb24tY2hlY2ttYXJrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7qSAXCI7IH1cblxuLmljb24tdXNlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIu6kgVwiOyB9XG5cbi5pY29uLWVudmVsb3BlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7qSCXCI7IH1cblxuLmljb24tc2VhcmNoOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7qSDXCI7IH1cblxuLmljb24tY2xvc2U6YmVmb3JlIHtcbiAgY29udGVudDogXCLupIRcIjsgfVxuXG4uaWNvbi1wbGF5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7qSFXCI7IH1cblxuLmljb24tZmFjZWJvb2s6YmVmb3JlIHtcbiAgY29udGVudDogXCLupIZcIjsgfVxuXG4uaWNvbi1naXRodWI6YmVmb3JlIHtcbiAgY29udGVudDogXCLupIdcIjsgfVxuXG4uaWNvbi1saW5rZWRpbjpiZWZvcmUge1xuICBjb250ZW50OiBcIu6kiFwiOyB9XG5cbi5pY29uLXR3aXR0ZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCLupIlcIjsgfVxuXG4uaWNvbi15b3V0dWJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7qSKXCI7IH1cblxuLmljb24tY2hldnJvbi1lYXN0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi7qSLXCI7IH1cblxuLmljb24tY2hldnJvbi1ub3J0aDpiZWZvcmUge1xuICBjb250ZW50OiBcIu6kjFwiOyB9XG5cbi5pY29uLWNoZXZyb24tc291dGg6YmVmb3JlIHtcbiAgY29udGVudDogXCLupI1cIjsgfVxuXG4uaWNvbi1jaGV2cm9uLXdlc3Q6YmVmb3JlIHtcbiAgY29udGVudDogXCLupI5cIjsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBjb2xvcjogIzYyNjI2MjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwOyB9XG5cbmgxLCBoMiwgaDMsIGg0IHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogI2M1YzVjNTsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMS43NWVtO1xuICBmb250LXdlaWdodDogMzAwOyB9XG5cbmgyIHtcbiAgZm9udC1zaXplOiAxLjVlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDsgfVxuXG5oMyB7XG4gIGNvbG9yOiAjNjI2MjYyO1xuICBmb250LXNpemU6IDFlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNTYyNTtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG5oMSArIGg0IHtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxucCB7XG4gIGNvbG9yOiAjNjI2MjYyO1xuICBmb250LXNpemU6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDsgfVxuICBwLmF0dHJpYnV0aW9uIHtcbiAgICBmb250LXNpemU6IDgwJTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuaW5wdXQsXG5idXR0b24sXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0OyB9XG5cbmEge1xuICBjb2xvcjogI2YwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGNvbG9yLCBiYWNrZ3JvdW5kLWNvbG9yIDAuNXM7IH1cbiAgYTpob3ZlciwgYTpmb2N1cyB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5jbGVhcmZpeDpiZWZvcmUsIC5jbGVhcmZpeDphZnRlcixcbi5jb250YWluZXI6YmVmb3JlLFxuLmNvbnRhaW5lcjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4uY2xlYXJmaXg6YWZ0ZXIsXG4uY29udGFpbmVyOmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAzMHB4OyB9XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuaHIge1xuICBtYXJnaW46IDFlbSAwOyB9XG5cbi5zci1vbmx5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuICBib3JkZXI6IDA7IH1cblxuLnNyLW9ubHktZm9jdXNhYmxlOmFjdGl2ZSwgLnNyLW9ubHktZm9jdXNhYmxlOmZvY3VzIHtcbiAgcG9zaXRpb246IHN0YXRpYztcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgY2xpcDogYXV0bzsgfVxuXG5bcm9sZT1cImJ1dHRvblwiXSB7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuXG4ucHVsbC1sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7IH1cblxuLnB1bGwtcmlnaHQge1xuICBmbG9hdDogcmlnaHQ7IH1cblxuW2Rpc2FibGVkXSxcbi5pcy1kaXNhYmxlZCB7XG4gIGNvbG9yOiAjY2NjICFpbXBvcnRhbnQ7IH1cblxuLmhhcy1oaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0ICFpbXBvcnRhbnQ7IH1cblxuLm5vd3JhcCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGZvbnQtc2l6ZTogMWVtICFpbXBvcnRhbnQ7IH1cblxuYmxvY2txdW90ZSB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4ud2lkZS1zY3JlZW4tb25seSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5uYXJyb3ctc2NyZWVuLW9ubHkge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAud2lkZS1zY3JlZW4tb25seSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAubmFycm93LXNjcmVlbi1vbmx5IHtcbiAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbi5oYXMtYm9yZGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2YwZjBmMDsgfVxuXG4ubG9hZGVyLFxuLmxvYWRlcjphZnRlciB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgd2lkdGg6IDEwZW07XG4gIGhlaWdodDogMTBlbTsgfVxuXG4ubG9hZGVyIHtcbiAgbWFyZ2luOiA2MHB4IGF1dG87XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWluZGVudDogLTk5OTllbTtcbiAgYm9yZGVyLXRvcDogMS4xZW0gc29saWQgcmdiYSgyMzksIDIyLCAyMCwgMC4yKTtcbiAgYm9yZGVyLXJpZ2h0OiAxLjFlbSBzb2xpZCByZ2JhKDIzOSwgMjIsIDIwLCAwLjIpO1xuICBib3JkZXItYm90dG9tOiAxLjFlbSBzb2xpZCByZ2JhKDIzOSwgMjIsIDIwLCAwLjIpO1xuICBib3JkZXItbGVmdDogMS4xZW0gc29saWQgI2VmMTYxNDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgYW5pbWF0aW9uOiBsb2FkOCAxLjFzIGluZmluaXRlIGxpbmVhcjsgfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZDgge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfSB9XG5cbkBrZXlmcmFtZXMgbG9hZDgge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfSB9XG5cbi50b3AtbWVzc2FnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBsaW5lLWhlaWdodDogNTBweDtcbiAgcGFkZGluZzogMCAyMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjNjI2MjYyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUxLCA1MSwgNTEsIDAuNyk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmOyB9XG4gIC50b3AtbWVzc2FnZSBzcGFuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBmb250LXNpemU6IDEuMTI1ZW07XG4gICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgLnRvcC1tZXNzYWdlIHNwYW4gYSB7XG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7IH1cblxuLm5hdkFjdGl2ZSAudG9wLW1lc3NhZ2Uge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA4MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUxLCA1MSwgNTEsIDAuNyk7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC41czsgfVxuXG4ubWFpbi1sb2dvIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGxpbmUtaGVpZ2h0OiA4MHB4O1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMzJweDtcbiAgY29sb3I6ICNmZmY7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgLm1haW4tbG9nbyB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH0gfVxuXG4udG9wLW1lc3NhZ2UgKyBoZWFkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTBweDsgfVxuICAudG9wLW1lc3NhZ2UgKyBoZWFkZXIuaXNGaXhlZCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICB6LWluZGV4OiAxMDAwOyB9XG5cbi5tYWluLW5hdmlnYXRpb24ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogODBweDtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMTAwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MSwgNTEsIDUxLCAwLjcpO1xuICBtYXJnaW46IDAgMDtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAubWFpbi1uYXZpZ2F0aW9uIC5tYWluLW1lbnUge1xuICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgbWFyZ2luLXRvcDogNjBweDtcbiAgICB0cmFuc2l0aW9uOiBtYXJnaW4gMXM7IH1cbiAgICAubWFpbi1uYXZpZ2F0aW9uIC5tYWluLW1lbnUgPiBsaSBhLCAubWFpbi1uYXZpZ2F0aW9uIC5tYWluLW1lbnUgPiBsaSBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiA1ZW07XG4gICAgICBjb2xvcjogI2YwMDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLm1haW4tbmF2aWdhdGlvbiAubWFpbi1tZW51ID4gbGkgYTpob3ZlciwgLm1haW4tbmF2aWdhdGlvbiAubWFpbi1tZW51ID4gbGkgc3Bhbjpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSAuZHJvcGRvd24tbWVudSB7XG4gICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgZmxvYXQ6IG5vbmU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7IH1cbiAgICAgIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSAuZHJvcGRvd24tbWVudSBhIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjE0Mjg2ZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzZW07XG4gICAgICAgIGNvbG9yOiAjZjAwO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDYwcHg7IH1cbiAgLm1haW4tbmF2aWdhdGlvbiBsaSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAubWFpbi1uYXZpZ2F0aW9uIGxpLmhhcy1ib3R0b20tYm9yZGVyIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjAwOyB9XG5cbi50b3AtbWVzc2FnZSArIGhlYWRlciAubWFpbi1uYXZpZ2F0aW9uIHtcbiAgdG9wOiAxNTBweDsgfVxuXG4ubmF2QWN0aXZlIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSA+IGxpID4gYSAuaWNvbixcbi5uYXZBY3RpdmUgLm1haW4tbmF2aWdhdGlvbiAubWFpbi1tZW51ID4gbGkgPiBzcGFuIC5pY29uIHtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMzRweDsgfVxuICAubmF2QWN0aXZlIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSA+IGxpID4gYSAuaWNvbi5pY29uLWNoZXZyb24tc291dGgsIC5uYXZBY3RpdmUgLm1haW4tbmF2aWdhdGlvbiAubWFpbi1tZW51ID4gbGkgPiBhIC5pY29uLmljb24tY2hldnJvbi1lYXN0LFxuICAubmF2QWN0aXZlIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSA+IGxpID4gc3BhbiAuaWNvbi5pY29uLWNoZXZyb24tc291dGgsXG4gIC5uYXZBY3RpdmUgLm1haW4tbmF2aWdhdGlvbiAubWFpbi1tZW51ID4gbGkgPiBzcGFuIC5pY29uLmljb24tY2hldnJvbi1lYXN0IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLm5hdkFjdGl2ZSAubWFpbi1uYXZpZ2F0aW9uIC5tYWluLW1lbnUgPiBsaSA+IGEgLmljb24uaWNvbi1jaGV2cm9uLW5vcnRoLFxuICAubmF2QWN0aXZlIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSA+IGxpID4gc3BhbiAuaWNvbi5pY29uLWNoZXZyb24tbm9ydGgge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLm5hdkFjdGl2ZSAubWFpbi1uYXZpZ2F0aW9uIC5tYWluLW1lbnUgPiBsaS5zdGF5T3BlbiA+IGEgLmljb24uaWNvbi1jaGV2cm9uLXNvdXRoLFxuLm5hdkFjdGl2ZSAubWFpbi1uYXZpZ2F0aW9uIC5tYWluLW1lbnUgPiBsaS5zdGF5T3BlbiA+IHNwYW4gLmljb24uaWNvbi1jaGV2cm9uLXNvdXRoIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4ubmF2QWN0aXZlIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSA+IGxpLnN0YXlPcGVuID4gYSAuaWNvbi5pY29uLWNoZXZyb24tbm9ydGgsXG4ubmF2QWN0aXZlIC5tYWluLW5hdmlnYXRpb24gLm1haW4tbWVudSA+IGxpLnN0YXlPcGVuID4gc3BhbiAuaWNvbi5pY29uLWNoZXZyb24tbm9ydGgge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLmhhbWJ1cmdlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAyMHB4O1xuICBmbG9hdDogcmlnaHQ7XG4gIHdpZHRoOiAzNXB4O1xuICBoZWlnaHQ6IDM1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lOyB9XG4gIC5oYW1idXJnZXI6Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7IH1cbiAgLmhhbWJ1cmdlciBzcGFuLFxuICAuaGFtYnVyZ2VyIHNwYW46YmVmb3JlLFxuICAuaGFtYnVyZ2VyIHNwYW46YWZ0ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiAxcHg7XG4gICAgaGVpZ2h0OiAzcHg7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTVweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICB0cmFuc2l0aW9uOiBhbGwgNTAwbXMgZWFzZS1pbi1vdXQ7IH1cbiAgLmhhbWJ1cmdlciBzcGFuOmJlZm9yZSB7XG4gICAgdG9wOiAtMTBweDsgfVxuICAuaGFtYnVyZ2VyIHNwYW46YWZ0ZXIge1xuICAgIHRvcDogYXV0bztcbiAgICBib3R0b206IC0xMHB4OyB9XG4gIC5oYW1idXJnZXI6aG92ZXIgc3BhbixcbiAgLmhhbWJ1cmdlcjpob3ZlciBzcGFuOmJlZm9yZSxcbiAgLmhhbWJ1cmdlcjpob3ZlciBzcGFuOmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjAwOyB9XG5cbi5uYXZBY3RpdmUgLmhhbWJ1cmdlciBzcGFuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLm5hdkFjdGl2ZSAuaGFtYnVyZ2VyIHNwYW46YmVmb3JlLFxuLm5hdkFjdGl2ZSAuaGFtYnVyZ2VyIHNwYW46YWZ0ZXIge1xuICB0b3A6IDA7IH1cblxuLm5hdkFjdGl2ZSAuaGFtYnVyZ2VyIHNwYW46YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpOyB9XG5cbi5uYXZBY3RpdmUgLmhhbWJ1cmdlciBzcGFuOmFmdGVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxuXG4ubmF2QWN0aXZlIC5oYW1idXJnZXI6aG92ZXIgc3BhbjpiZWZvcmUsXG4ubmF2QWN0aXZlIC5oYW1idXJnZXI6aG92ZXIgc3BhbjphZnRlciB7XG4gIGJhY2tncm91bmQ6ICNmMDA7IH1cblxudWwsIG9sIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG4gIHVsIGxpLCBvbCBsaSB7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmxpc3QtdW5zdHlsZWQge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi5saXN0LWlubGluZSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgLmxpc3QtaW5saW5lID4gbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4jdG9Ub3Age1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDIwcHg7XG4gIHJpZ2h0OiAyMHB4O1xuICB6LWluZGV4OiAxMDAwO1xuICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2UgMHM7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgd2lkdGg6IDYwcHg7XG4gIGhlaWdodDogNjBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgbGluZS1oZWlnaHQ6IDYwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICBjb2xvcjogI2YwMDsgfVxuXG4ubWFpbi1zbGlkZXMge1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwdnc7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAubWFpbi1zbGlkZXMgPiBsaSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IDE7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gICAgLm1haW4tc2xpZGVzID4gbGkudGl0bGUge1xuICAgICAgei1pbmRleDogMjtcbiAgICAgIHRvcDogNDAlO1xuICAgICAgaGVpZ2h0OiBhdXRvOyB9XG4gICAgICAubWFpbi1zbGlkZXMgPiBsaS50aXRsZSBoMSB7XG4gICAgICAgIG1heC13aWR0aDogMTI4MHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgcGFkZGluZzogMCAzMHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGZvbnQtc2l6ZTogNXZ3OyB9XG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMjUwcHgpIHtcbiAgICAgICAgICAubWFpbi1zbGlkZXMgPiBsaS50aXRsZSBoMSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDZ2dzsgfSB9XG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgICAgICAubWFpbi1zbGlkZXMgPiBsaS50aXRsZSBoMSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDd2dzsgfSB9XG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgICAgICAgIC5tYWluLXNsaWRlcyA+IGxpLnRpdGxlIGgxIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogOHZ3OyB9IH1cbiAgICAubWFpbi1zbGlkZXMgPiBsaSBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuXG4uc2VjdGlvbi1jb250YWluZXIgaDEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjMzMzO1xuICBmb250LXNpemU6IDM2cHg7XG4gIHBhZGRpbmc6IDQwcHggMDsgfVxuICAuc2VjdGlvbi1jb250YWluZXIgaDE6YmVmb3JlLCAuc2VjdGlvbi1jb250YWluZXIgaDE6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiLy9cIjtcbiAgICBmb250LXNpemU6IGJvbGQ7XG4gICAgcGFkZGluZzogMCAyMHB4O1xuICAgIGNvbG9yOiByZWQ7IH1cblxuLmJsb2NrLWNvbnRhaW5lciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDBweDsgfVxuXG4uc2VyaWVzLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAwcHg7XG4gIG1pbi1oZWlnaHQ6IDUwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgZGlzcGxheTogZmxleDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgLnNlcmllcy1jb250YWluZXIge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgLnNlcmllcy1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtaW4taGVpZ2h0OiAwOyB9IH1cbiAgLnNlcmllcy1jb250YWluZXI6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLXRvcDogNTBweDsgfVxuICAuc2VyaWVzLWNvbnRhaW5lciA+ICoge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgICAgLnNlcmllcy1jb250YWluZXIgPiAqIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uc2VyaWVzLWNvbnRhaW5lcjpudGgtY2hpbGQoZXZlbikgLnNlcmllcy1hcnR3b3JrIHtcbiAgb3JkZXI6IDI7IH1cblxuLnNlcmllcy1kZXNjcmlwdGlvbiB7XG4gIHBhZGRpbmc6IDMwcHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgIC5zZXJpZXMtZGVzY3JpcHRpb24ge1xuICAgICAgcGFkZGluZy10b3A6IDA7IH1cbiAgICAgIC5zZXJpZXMtZGVzY3JpcHRpb24gaDIge1xuICAgICAgICBtYXJnaW4tdG9wOiAwOyB9IH1cblxuLnNlcmllcy1hcnR3b3JrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5zZXJpZXMtYXJ0d29yayB7XG4gICAgICB3aWR0aDogODB2dztcbiAgICAgIGhlaWdodDogODB2dztcbiAgICAgIG1hcmdpbjogMCBhdXRvIDMwcHg7IH1cbiAgICAgIC5zZXJpZXMtYXJ0d29yay5oYXMtYm9yZGVyIHtcbiAgICAgICAgYm9yZGVyOiBub25lOyB9IH1cbiAgLnNlcmllcy1hcnR3b3JrIGxpIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTtcbiAgICBvcGFjaXR5OiAwOyB9XG4gICAgLnNlcmllcy1hcnR3b3JrIGxpOmZpcnN0LWNoaWxkIHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cblxuLmFib3V0LWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTYwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4OyB9XG4gIC5hYm91dC1jb250YWluZXIgLmFib3V0LWRlc2NyaXB0aW9uIHtcbiAgICBwYWRkaW5nOiAzMHB4OyB9XG4gICAgLmFib3V0LWNvbnRhaW5lciAuYWJvdXQtZGVzY3JpcHRpb24gaW1nIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbjogMCAwIDMwcHggNTBweDsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgICAgICAuYWJvdXQtY29udGFpbmVyIC5hYm91dC1kZXNjcmlwdGlvbiBpbWcge1xuICAgICAgICAgIHdpZHRoOiA1MCU7IH0gfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgICAgICAuYWJvdXQtY29udGFpbmVyIC5hYm91dC1kZXNjcmlwdGlvbiBpbWcge1xuICAgICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG8gNTBweDtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBmbG9hdDogbm9uZTsgfSB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAgICAgLmFib3V0LWNvbnRhaW5lciAuYWJvdXQtZGVzY3JpcHRpb24gaW1nIHtcbiAgICAgICAgICB3aWR0aDogODB2dzsgfSB9XG4gICAgLmFib3V0LWNvbnRhaW5lciAuYWJvdXQtZGVzY3JpcHRpb24gcDpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH1cblxuLmNvbnRhY3QtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAzMDBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2Fzc2V0cy9pbWFnZXMvc2l0ZS1pbWFnZXMvY29udGFjdC1iZy5qcGdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNmZmY7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cbiAgLmNvbnRhY3QtY29udGFpbmVyIGgxIHtcbiAgICBjb2xvcjogI2ZmZjsgfVxuIiwiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6MzAwLDQwMCw2MDAsNzAwJyk7XG5cbi8vIGljb24gZm9udHNcbkBpbXBvcnQgXCJpY29ucy92YXJpYWJsZXNcIjtcbkBpbXBvcnQgXCJpY29ucy9zdHlsZVwiO1xuXG5AaW1wb3J0IFwidmFyaWFibGVzXCI7XG5AaW1wb3J0IFwiYmFzZVwiO1xuXG5AaW1wb3J0IFwiY29tcG9uZW50cy9sb2FkZXJcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL3RvcC1tZXNzYWdlXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9oZWFkZXJcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL2xpc3RzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy90by10b3BcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL21haW4tc2xpZGVyXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9jb250YWluZXJzXCI7IiwiQGltcG9ydCBcInZhcmlhYmxlc1wiO1xuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdtc1NhbmRib3gnO1xuICBzcmM6ICB1cmwoJyN7JGljb21vb24tZm9udC1wYXRofS9tc1NhbmRib3guZW90P2dkcTdraScpO1xuICBzcmM6ICB1cmwoJyN7JGljb21vb24tZm9udC1wYXRofS9tc1NhbmRib3guZW90P2dkcTdraSNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICB1cmwoJyN7JGljb21vb24tZm9udC1wYXRofS9tc1NhbmRib3gudHRmP2dkcTdraScpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICB1cmwoJyN7JGljb21vb24tZm9udC1wYXRofS9tc1NhbmRib3gud29mZj9nZHE3a2knKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICB1cmwoJyN7JGljb21vb24tZm9udC1wYXRofS9tc1NhbmRib3guc3ZnP2dkcTdraSNtc1NhbmRib3gnKSBmb3JtYXQoJ3N2ZycpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbi5pY29uIHtcbiAgLyogdXNlICFpbXBvcnRhbnQgdG8gcHJldmVudCBpc3N1ZXMgd2l0aCBicm93c2VyIGV4dGVuc2lvbnMgdGhhdCBjaGFuZ2UgZm9udHMgKi9cbiAgZm9udC1mYW1pbHk6ICdtc1NhbmRib3gnICFpbXBvcnRhbnQ7XG4gIHNwZWFrOiBub25lO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG5cbiAgLyogQmV0dGVyIEZvbnQgUmVuZGVyaW5nID09PT09PT09PT09ICovXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG4uaWNvbi1jb25uZWN0aW9uIHtcbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICRpY29uLWNvbm5lY3Rpb247XG4gIH1cbn1cbi5pY29uLWNvZGUge1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJGljb24tY29kZTtcbiAgfVxufVxuLmljb24tZmVlZCB7XG4gICY6YmVmb3JlIHtcbiAgICBjb250ZW50OiAkaWNvbi1mZWVkO1xuICB9XG59XG4uaWNvbi1jaGVja21hcmsge1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJGljb24tY2hlY2ttYXJrO1xuICB9XG59XG4uaWNvbi11c2VyIHtcbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICRpY29uLXVzZXI7XG4gIH1cbn1cbi5pY29uLWVudmVsb3BlIHtcbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICRpY29uLWVudmVsb3BlO1xuICB9XG59XG4uaWNvbi1zZWFyY2gge1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJGljb24tc2VhcmNoO1xuICB9XG59XG4uaWNvbi1jbG9zZSB7XG4gICY6YmVmb3JlIHtcbiAgICBjb250ZW50OiAkaWNvbi1jbG9zZTtcbiAgfVxufVxuLmljb24tcGxheSB7XG4gICY6YmVmb3JlIHtcbiAgICBjb250ZW50OiAkaWNvbi1wbGF5O1xuICB9XG59XG4uaWNvbi1mYWNlYm9vayB7XG4gICY6YmVmb3JlIHtcbiAgICBjb250ZW50OiAkaWNvbi1mYWNlYm9vaztcbiAgfVxufVxuLmljb24tZ2l0aHViIHtcbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICRpY29uLWdpdGh1YjtcbiAgfVxufVxuLmljb24tbGlua2VkaW4ge1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJGljb24tbGlua2VkaW47XG4gIH1cbn1cbi5pY29uLXR3aXR0ZXIge1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJGljb24tdHdpdHRlcjtcbiAgfVxufVxuLmljb24teW91dHViZSB7XG4gICY6YmVmb3JlIHtcbiAgICBjb250ZW50OiAkaWNvbi15b3V0dWJlO1xuICB9XG59XG4uaWNvbi1jaGV2cm9uLWVhc3Qge1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJGljb24tY2hldnJvbi1lYXN0O1xuICB9XG59XG4uaWNvbi1jaGV2cm9uLW5vcnRoIHtcbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICRpY29uLWNoZXZyb24tbm9ydGg7XG4gIH1cbn1cbi5pY29uLWNoZXZyb24tc291dGgge1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJGljb24tY2hldnJvbi1zb3V0aDtcbiAgfVxufVxuLmljb24tY2hldnJvbi13ZXN0IHtcbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICRpY29uLWNoZXZyb24td2VzdDtcbiAgfVxufVxuXG4iLCIkaWNvbW9vbi1mb250LXBhdGg6IFwiLi4vZm9udHNcIiAhZGVmYXVsdDtcblxuJGljb24tY29ubmVjdGlvbjogXCJcXGU5MGZcIjtcbiRpY29uLWNvZGU6IFwiXFxlOTEwXCI7XG4kaWNvbi1mZWVkOiBcIlxcZTkxMVwiO1xuJGljb24tY2hlY2ttYXJrOiBcIlxcZTkwMFwiO1xuJGljb24tdXNlcjogXCJcXGU5MDFcIjtcbiRpY29uLWVudmVsb3BlOiBcIlxcZTkwMlwiO1xuJGljb24tc2VhcmNoOiBcIlxcZTkwM1wiO1xuJGljb24tY2xvc2U6IFwiXFxlOTA0XCI7XG4kaWNvbi1wbGF5OiBcIlxcZTkwNVwiO1xuJGljb24tZmFjZWJvb2s6IFwiXFxlOTA2XCI7XG4kaWNvbi1naXRodWI6IFwiXFxlOTA3XCI7XG4kaWNvbi1saW5rZWRpbjogXCJcXGU5MDhcIjtcbiRpY29uLXR3aXR0ZXI6IFwiXFxlOTA5XCI7XG4kaWNvbi15b3V0dWJlOiBcIlxcZTkwYVwiO1xuJGljb24tY2hldnJvbi1lYXN0OiBcIlxcZTkwYlwiO1xuJGljb24tY2hldnJvbi1ub3J0aDogXCJcXGU5MGNcIjtcbiRpY29uLWNoZXZyb24tc291dGg6IFwiXFxlOTBkXCI7XG4kaWNvbi1jaGV2cm9uLXdlc3Q6IFwiXFxlOTBlXCI7XG5cblxuXG4iLCIvL1xuLy8gYmFzZSBzdHlsZXNcbi8vXG5cbi8vIGJveCBzaXppbmcgZm9yIGV2ZXJ5dGhpbmdcbioge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiAkZGVmYXVsdC1mb250LWZhbWlseS1zYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogJGRlZmF1bHQtZm9udC1zaXplO1xuICAgIGNvbG9yOiAkZGVmYXVsdC10ZXh0LWNvbG9yO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb250ZW50LWJnLWNvbG9yO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwO1xufVxuaDEsIGgyLCBoMywgaDQge1xuICAgIGZvbnQtZmFtaWx5OiAkdGl0bGUtZm9udC1mYW1pbHk7XG4gICAgY29sb3I6ICNjNWM1YzU7XG59XG5oMSB7XG4gICAgZm9udC1zaXplOiAxLjc1ZW07XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cbmgyIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG59XG5oMyB7XG4gICAgY29sb3I6ICRkZWZhdWx0LXRleHQtY29sb3I7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBsaW5lLWhlaWdodDogMS41NjI1O1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG59XG4vLyBoZXJlIHdlIHVzZSBoNCBhcyBhIHRpdGxlIGJ5bGluZVxuaDEgKyBoNCB7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxucCB7XG4gICAgY29sb3I6ICRkZWZhdWx0LXRleHQtY29sb3I7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcblxuICAgICYuYXR0cmlidXRpb24ge1xuICAgICAgICBmb250LXNpemU6IDgwJTtcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIH1cbn1cblxuaW5wdXQsXG5idXR0b24sXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuXG5hIHtcbiAgICBjb2xvcjogJGRlZmF1bHQtbGluay1jb2xvcjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IGNvbG9yLCBiYWNrZ3JvdW5kLWNvbG9yIDAuNXM7XG5cbiAgICAmOmhvdmVyLFxuICAgICY6Zm9jdXMge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxufVxuXG4vLyBjbGVhcmZpeFxuLy8gY29udGFpbmVyIGlzIGFsd2F5cyAnZml4ZWQnXG4uY2xlYXJmaXgsXG4uY29udGFpbmVyIHtcbiAgICAmOmJlZm9yZSxcbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxufVxuLmNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAkbWF4LXBhZ2Utd2lkdGg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogMCAzMHB4O1xuXG5cbn1cblxuLy8gaW1hZ2VzIGFyZSBhbHdheXMgcmVzcG9uc2l2ZS4gdXNlIGlubGluZS1ibG9jayBzbyB3ZSBjYW4gdXNlIHRleHQtYWxpZ25cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcbn1cblxuaHIge1xuICAgIG1hcmdpbjogMWVtIDA7XG59XG5cbi8vIE9ubHkgZGlzcGxheSBjb250ZW50IHRvIHNjcmVlbiByZWFkZXJzXG4vLyBTZWU6IGh0dHA6Ly9hMTF5cHJvamVjdC5jb20vcG9zdHMvaG93LXRvLWhpZGUtY29udGVudFxuLnNyLW9ubHkge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMXB4O1xuICAgIGhlaWdodDogMXB4O1xuICAgIG1hcmdpbjogLTFweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgY2xpcDogcmVjdCgwLDAsMCwwKTtcbiAgICBib3JkZXI6IDA7XG59XG5cbi8vIFVzZSBpbiBjb25qdW5jdGlvbiB3aXRoIC5zci1vbmx5IHRvIG9ubHkgZGlzcGxheSBjb250ZW50IHdoZW4gaXQncyBmb2N1c2VkLlxuLy8gVXNlZnVsIGZvciBcIlNraXAgdG8gbWFpbiBjb250ZW50XCIgbGlua3M7IHNlZSBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDEzL05PVEUtV0NBRzIwLVRFQ0hTLTIwMTMwOTA1L0cxXG4vLyBDcmVkaXQ6IEhUTUw1IEJvaWxlcnBsYXRlXG4uc3Itb25seS1mb2N1c2FibGUge1xuICAgICY6YWN0aXZlLFxuICAgICY6Zm9jdXMge1xuICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgICBjbGlwOiBhdXRvO1xuICAgIH1cbn1cblxuLy8gaU9TIFwiY2xpY2thYmxlIGVsZW1lbnRzXCIgZml4IGZvciByb2xlPVwiYnV0dG9uXCJcbi8vIEZpeGVzIFwiY2xpY2thYmlsaXR5XCIgaXNzdWUgKGFuZCBtb3JlIGdlbmVyYWxseSwgdGhlIGZpcmluZyBvZiBldmVudHMgc3VjaCBhcyBmb2N1cyBhcyB3ZWxsKVxuLy8gZm9yIHRyYWRpdGlvbmFsbHkgbm9uLWZvY3VzYWJsZSBlbGVtZW50cyB3aXRoIHJvbGU9XCJidXR0b25cIlxuLy8gc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0V2ZW50cy9jbGljayNTYWZhcmlfTW9iaWxlXG5cbltyb2xlPVwiYnV0dG9uXCJdIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi8vIHV0aWxpdHkgc3R5bGVzXG4ucHVsbC1sZWZ0IHtcbiAgICBmbG9hdDogbGVmdDtcbn1cblxuLnB1bGwtcmlnaHQge1xuICAgIGZsb2F0OiByaWdodDtcbn1cblxuW2Rpc2FibGVkXSxcbi5pcy1kaXNhYmxlZCB7XG4gICAgY29sb3I6ICRkZWZhdWx0LWRpc2FibGVkLWNvbG9yICFpbXBvcnRhbnQ7XG59XG5cbi5oYXMtaGlnaGxpZ2h0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaGlnaGxpZ2h0LWJnLWNvbG9yICFpbXBvcnRhbnQ7XG59XG5cbi5ub3dyYXAge1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgZm9udC1zaXplOiAxZW0gIWltcG9ydGFudDtcbn1cblxuYmxvY2txdW90ZSB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLy8gZ2xvYmFsIHdpZGUvbmFycm93IHNjcmVlbiB2aXNpYmlsaXR5XG4ud2lkZS1zY3JlZW4tb25seSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4ubmFycm93LXNjcmVlbi1vbmx5IHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6ICRtb2JpbGUtYnJlYWstcG9pbnQpIHtcbiAgICAud2lkZS1zY3JlZW4tb25seSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAubmFycm93LXNjcmVlbi1vbmx5IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuLmhhcy1ib3JkZXIge1xuICAgIGJvcmRlcjogJGRlZmF1bHQtYm9yZGVyO1xufSIsIiRtYXgtcGFnZS13aWR0aDogICAgICAgICAgICAgICAgICAgICAgICAgICAgMTI4MHB4O1xuLy8gbWFpbiBtb2JpbGUgYnJlYWsgcG9pbnRcbiRtb2JpbGUtYnJlYWstcG9pbnQ6ICAgICAgICAgICAgICAgICAgICAgICAgNzY4cHg7XG4kc21hbGwtc2NyZWVuLWJyZWFrLXBvaW50OiAgICAgICAgICAgICAgICAgIDQwMHB4O1xuXG4vLyBjb250ZW50IGJhY2tncm91bmQgY29sb3Jcbi8vIHRoaXMgY29sb3IgaXMgYXBwbGllZCB0byB0aGUgY29udGVudCBhcmVhLiBpbmRpdmlkdWFsIGVsZW1lbnRzIHdpdGggZGlmZmVyZW50IGJhY2tncm91bmRcbi8vIGNvbG9ycyBzaXQgb24gdG9wIG9mIHRoaXNcbiRjb250ZW50LWJnLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAgI2ZmZjtcblxuLy8gbWluaW1hbCBzaWRlIHBhZGRpbmdcbi8vIG1pbmltYWwgc2lkZSBwYWRkaW5nIGZvciBzbWFsbCBzY3JlZW5zIHdoZW4gY29udGFpbmVyIGlzIGF0IDEwMCUgc2NyZWVuIHdpZHRoXG4kbWluLXNpZGUtcGFkZGluZzogICAgICAgICAgICAgICAgICAgICAgICAgIDMwcHg7XG5cbi8vIGZvbnQgdmFyaWFibGVzXG4kZGVmYXVsdC1mb250LWZhbWlseS1zYW5zLXNlcmlmOiAgICAgICAgICAgICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuJHRpdGxlLWZvbnQtZmFtaWx5OiAgICAgICAgICAgICAgICAgICAgICAgICAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XG4kZGVmYXVsdC1mb250LXNpemU6ICAgICAgICAgICAgICAgICAgICAgICAgIDEwMCU7XG5cbi8vIHR5cG9ncmFwaHlcbiRkZWZhdWx0LXRleHQtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgIzYyNjI2MjtcbiRsaWdodC10ZXh0LWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAgI2ZmZjtcbiRkZWZhdWx0LWJnLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAgI2ZmZjtcbiRkZWZhdWx0LWxpbmstY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgI2YwMDtcbiRhY3RpdmUtbGluay1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtbGluay1jb2xvcjtcbiRkZWZhdWx0LWhvdmVyLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgI2YwMDtcbiRkZWZhdWx0LWRpbW1lZC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgIzk5OTtcbiRkZWZhdWx0LWRpc2FibGVkLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgI2NjYztcbiRzZWN0aW9uLWhlYWRlci1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgIzMzMztcblxuXG4vLyBzaXRlIHN0cnVjdHVyZVxuXG4vLyB0b3AgbWVzc2FnZVxuJHRvcC1tZXNzYWdlLWhlaWdodDogICAgICAgICAgICAgICAgICAgICAgICA1MHB4O1xuJHRvcC1tZXNzYWdlLWJnLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICByZ2JhKDUxLDUxLDUxLDAuNyk7XG5cbi8vIGhlYWRlclxuJGhlYWRlci1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA4MHB4O1xuJGhlYWRlci1iZy1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgICByZ2JhKDUxLDUxLDUxLDAuNyk7XG4kc21hbGwtc2NyZWVuLW1lbnUtYmctY29sb3I6ICAgICAgICAgICAgICAgIHJnYmEoNTEsNTEsNTEsMC45Nyk7XG4kaGVhZGVyLWJnLWNvbG9yLW5vLW9wYWNpdHk6ICAgICAgICAgICAgICAgIHJnYmEoNTEsNTEsNTEsMSk7XG5cbi8vIG5hdmlnYXRpb25cbiRuYXYtYmctY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGhlYWRlci1iZy1jb2xvcjtcbiRuYXYtdGV4dC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtbGluay1jb2xvcjtcbiRtYWluLW5hdi1saW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgI2ZmZjtcbiRtYWluLW5hdi1saW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICAgICAgICAgcmVkO1xuJG1haW4tbmF2LWxpbmstYWN0aXZlLWNvbG9yOiAgICAgICAgICAgICAgICAkZGVmYXVsdC1ob3Zlci1jb2xvcjtcbiRtYWluLW5hdi1zdWJsaW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtbGluay1jb2xvcjtcbiRtYWluLW5hdi1idG4tY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgJG5hdi1iZy1jb2xvcjtcbiRtYWluLW5hdi1idG4tYmctY29sb3I6ICAgICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtaG92ZXItY29sb3I7XG4kbWFpbi1uYXYtYnRuLWJnLWhlaWdodDogICAgICAgICAgICAgICAgICAgIDEuODc1ZW07XG4kbWFpbi1uYXYtYnRuLXJhZGl1czogICAgICAgICAgICAgICAgICAgICAgICRtYWluLW5hdi1idG4tYmctaGVpZ2h0LzI7XG5cbi8vIG1haW4gbmF2IGRyb3Bkb3duIG1lbnVzXG4kbWFpbi1uYXYtZHJvcGRvd24tbWVudS1iZy1jb2xvcjogICAgICAgICAgIHJnYmEoMCwwLDAsMC43KTtcbiRtYWluLW5hdi1kcm9wZG93bi1tZW51LWJvcmRlcjogICAgICAgICAgICAgMXB4IHNvbGlkICMyNjI2MjY7XG4kbWFpbi1uYXYtZHJvcGRvd24tbWVudS1oaWdobGlnaHQtY29sb3I6ICAgICMyNjI2MjY7XG5cbi8vIG1vYmlsZSBtZW51XG4kbWFpbi1uYXYtbW9iaWxlLWJnLWNvbG9yOiAgICAgICAgICAgICAgICAgICRuYXYtYmctY29sb3I7XG4kY3RhLWJ0bi1tb2JpbGUtZm9udC1zaXplOiAgICAgICAgICAgICAgICAgIDE0cHg7XG5cbi8vIGJhbm5lclxuJGJhbm5lci1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA0MDBweDtcbiRsaWdodC1iYW5uZXItYmctY29sb3I6ICAgICAgICAgICAgICAgICAgICAgcmdiYSgyNTUsMjU1LDI1NSwwLjgpO1xuXG4vLyBib3JkZXJzXG4kZGVmYXVsdC1ib3JkZXI6ICAgICAgICAgICAgICAgICAgICAgICAgICAgIDFweCBzb2xpZCAjZjBmMGYwO1xuXG4vLyBmb290ZXJcbiRmb290ZXItYmctY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICAgcmdiYSg1MSw1MSw1MSwxKTtcbiRmb290ZXItc29jaWFsLXN0cmlwLWJnLWNvbG9yOiAgICAgICAgICAgICAgcmdiYSg1MSw1MSw1MSwxKTtcblxuJGZvb3Rlci1uYXYtbGluay1jb2xvcjogICAgICAgICAgICAgICAgICAgICAkZGVmYXVsdC1saW5rLWNvbG9yO1xuJHN1Yi1saW5rLWRpbW1lZC1jb2xvcjogICAgICAgICAgICAgICAgICAgICAkZGVmYXVsdC1kaW1tZWQtY29sb3I7XG4kZm9vdGVyLW5hdi1saW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICAgICAgICRkZWZhdWx0LWhvdmVyLWNvbG9yO1xuXG4kYm90dG9tLXN0cmlwZS10ZXh0LWNvbG9yOiAgICAgICAgICAgICAgICAgICM5OTk7XG4kaWNvbi1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRsaWdodC10ZXh0LWNvbG9yO1xuJGJvdHRvbS1zdHJpcGUtYmctY29sb3I6ICAgICAgICAgICAgICAgICAgICAkaGVhZGVyLWJnLWNvbG9yO1xuXG4vLyBidXR0b25zXG4kYnRuLWZvbnQtc2l6ZTogICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAuOTM4ZW07XG4kYnRuLWxpbmUtaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAgICAgIDIuMmVtO1xuJGJ0bi1mb250LXdlaWdodDogICAgICAgICAgICAgICAgICAgICAgICAgICA0MDA7XG5cbiRidG4tZGFyay1kZWZhdWx0LXRleHQtY29sb3I6ICAgICAgICAgICAgICAgI2U5MjEyZDtcbiRidG4tbGlnaHQtZGVmYXVsdC10ZXh0LWNvbG9yOiAgICAgICAgICAgICAgI2ZmZjtcbiRidG4tbGlnaHQtZGVmYXVsdC1iZy1jb2xvcjogICAgICAgICAgICAgICAgI2U5MjEyZDtcblxuJGJ0bi1kZWZhdWx0LXBhZGRpbmc6ICAgICAgICAgICAgICAgICAgICAgICAwIDEuMjVlbTtcbiRidG4tZGVmYXVsdC1ib3JkZXI6ICAgICAgICAgICAgICAgICAgICAgICAgMnB4IHNvbGlkICNlOTIxMmQ7XG4kYnRuLWRlZmF1bHQtaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAgIDQwcHg7IC8vMi41ZW07XG4kYnRuLWJvcmRlci1yYWRpdXM6ICAgICAgICAgICAgICAgICAgICAgICAgIDIycHg7IC8vMS4yNWVtO1xuXG4kYnRuLWRpc2FibGVkOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAuMztcblxuLy8gZHJvcGRvd25zXG4kZHJvcGRvd24tYmctY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICRkZWZhdWx0LWJnLWNvbG9yO1xuJGRyb3Bkb3duLWJvcmRlcjogICAgICAgICAgICAgICAgICAgICAgICAgICAxcHggc29saWQgIzI2MjYyNjtcbiRkcm9wZG93bi1oZWFkZXItY29sb3I6ICAgICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtdGV4dC1jb2xvcjtcbiRkcm9wZG93bi1saW5rLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtdGV4dC1jb2xvcjtcbiRkcm9wZG93bi1saW5rLWhvdmVyLWNvbG9yOiAgICAgICAgICAgICAgICAgJGRlZmF1bHQtaG92ZXItY29sb3I7XG4kZHJvcGRvd24tbGluay1ob3Zlci1iZy1jb2xvcjogICAgICAgICAgICAgICMyNjI2MjY7XG4kZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjogICAgICAgICAgICAgICRkZWZhdWx0LWRpbW1lZC1jb2xvcjtcblxuLy8gZm9ybXNcbiRjaGVja21hcmstY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICAgI2VjMWMyNDtcbiRmb3JtLWZpZWxkLWJvcmRlcjogICAgICAgICAgICAgICAgICAgICAgICAgMXB4IHNvbGlkICNlMGUwZTA7XG5cbi8vIGhpZ2hsaWdodCBiYWNrZ3JvdW5kXG4kaGlnaGxpZ2h0LWJnLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICNmNGY0ZjQ7XG5cbi8vIHNpZGViYXJcbiRzaWRlYmFyLWJnLWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICAgI2Y5ZjlmOTtcbiRzaWRlYmFyLXNvY2lhbC1iZy1jb2xvcjogICAgICAgICAgICAgICAgICAgI2VhZWFlYTtcblxuLy8gbW9kYWxzXG4kb3ZlcmxheS1iZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45NSk7IiwiLy8gbG9hZGVyIGZvciBhc3luY2ggc3R1ZmZcbi5sb2FkZXIsXG4ubG9hZGVyOmFmdGVyIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB3aWR0aDogMTBlbTtcbiAgaGVpZ2h0OiAxMGVtO1xufVxuLmxvYWRlciB7XG4gIG1hcmdpbjogNjBweCBhdXRvO1xuICBmb250LXNpemU6IDEwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1pbmRlbnQ6IC05OTk5ZW07XG4gIGJvcmRlci10b3A6IDEuMWVtIHNvbGlkIHJnYmEoMjM5LDIyLDIwLC4yKTtcbiAgICBib3JkZXItcmlnaHQ6IDEuMWVtIHNvbGlkIHJnYmEoMjM5LDIyLDIwLC4yKTtcbiAgICBib3JkZXItYm90dG9tOiAxLjFlbSBzb2xpZCByZ2JhKDIzOSwyMiwyMCwuMik7XG4gICAgYm9yZGVyLWxlZnQ6IDEuMWVtIHNvbGlkICNlZjE2MTQ7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gIGFuaW1hdGlvbjogbG9hZDggMS4xcyBpbmZpbml0ZSBsaW5lYXI7XG59XG5ALXdlYmtpdC1rZXlmcmFtZXMgbG9hZDgge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgfVxuICAxMDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuQGtleWZyYW1lcyBsb2FkOCB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICB9XG59IiwiLy8gVGhlIG1lc3NhZ2UgYmFubmVyIG9uIHRvcCBvZiB0aGUgcGFnZVxuLnRvcC1tZXNzYWdlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHotaW5kZXg6IDEwMDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAkdG9wLW1lc3NhZ2UtaGVpZ2h0O1xuICAgIGxpbmUtaGVpZ2h0OiAkdG9wLW1lc3NhZ2UtaGVpZ2h0O1xuICAgIHBhZGRpbmc6IDAgMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICRkZWZhdWx0LXRleHQtY29sb3I7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHRvcC1tZXNzYWdlLWJnLWNvbG9yO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmZmY7XG5cbiAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lO1xuICAgICAgICBmb250LWZhbWlseTogJGRlZmF1bHQtZm9udC1mYW1pbHktc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgICAgZm9udC1zaXplOiAxLjEyNWVtOyAvL34xNnB4XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgICAgIGEge1xuICAgICAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubmF2QWN0aXZlIHtcbiAgICAudG9wLW1lc3NhZ2Uge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn0iLCJoZWFkZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6ICRoZWFkZXItaGVpZ2h0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRoZWFkZXItYmctY29sb3I7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjVzO1xufVxuXG4ubWFpbi1sb2dvIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBsaW5lLWhlaWdodDogJGhlYWRlci1oZWlnaHQ7XG4gICAgZm9udC1mYW1pbHk6ICR0aXRsZS1mb250LWZhbWlseTtcbiAgICBmb250LXNpemU6IDMycHg7XG4gICAgY29sb3I6ICRsaWdodC10ZXh0LWNvbG9yO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICB9XG59XG5cbi50b3AtbWVzc2FnZSArIGhlYWRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogJHRvcC1tZXNzYWdlLWhlaWdodDtcblxuICAgICYuaXNGaXhlZCB7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICB6LWluZGV4OiAxMDAwO1xuICAgIH1cbn1cblxuLm1haW4tbmF2aWdhdGlvbiB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogJGhlYWRlci1oZWlnaHQ7XG4gICAgYm90dG9tOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaGVhZGVyLWJnLWNvbG9yO1xuICAgIG1hcmdpbjogMCAwO1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAubWFpbi1tZW51IHtcbiAgICAgICAgcGFkZGluZzogNDBweDtcbiAgICAgICAgbWFyZ2luLXRvcDogNjBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogbWFyZ2luIDFzO1xuXG4gICAgICAgID4gbGkge1xuXG4gICAgICAgICAgICBhLCBzcGFuIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiA1ZW07XG4gICAgICAgICAgICAgICAgY29sb3I6ICRkZWZhdWx0LWxpbmstY29sb3I7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5kcm9wZG93bi1tZW51IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICAgICAgICBmbG9hdDogbm9uZTtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcblxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjE0Mjg2ZW07IC8vfjE2cHhcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogM2VtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkZGVmYXVsdC1saW5rLWNvbG9yO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxpIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgICAgICYuaGFzLWJvdHRvbS1ib3JkZXIge1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRkZWZhdWx0LWxpbmstY29sb3I7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi50b3AtbWVzc2FnZSArIGhlYWRlciAubWFpbi1uYXZpZ2F0aW9uIHtcbiAgICB0b3A6IDE1MHB4O1xufVxuXG4ubmF2QWN0aXZlIHtcbiAgICAubWFpbi1uYXZpZ2F0aW9uIHtcblxuICAgICAgICAubWFpbi1tZW51IHtcblxuICAgICAgICAgICAgPiBsaSB7XG5cbiAgICAgICAgICAgICAgICA+IGEgLmljb24sXG4gICAgICAgICAgICAgICAgPiBzcGFuIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzRweDtcblxuICAgICAgICAgICAgICAgICAgICAmLmljb24tY2hldnJvbi1zb3V0aCxcbiAgICAgICAgICAgICAgICAgICAgJi5pY29uLWNoZXZyb24tZWFzdCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAmLmljb24tY2hldnJvbi1ub3J0aCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgJi5zdGF5T3BlbiA+IGEsXG4gICAgICAgICAgICAgICAgJi5zdGF5T3BlbiA+IHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICAuaWNvbi5pY29uLWNoZXZyb24tc291dGgge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAuaWNvbi5pY29uLWNoZXZyb24tbm9ydGgge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyB0aGUgaGFtYnVyZ2VyIGJ1dHRvblxuLmhhbWJ1cmdlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMjBweDtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlcjogbm9uZTtcblxuXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxuXG4gICAgc3BhbixcbiAgICBzcGFuOmJlZm9yZSxcbiAgICBzcGFuOmFmdGVyIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxcHg7XG4gICAgICAgIGhlaWdodDogM3B4O1xuICAgICAgICB3aWR0aDogMzVweDtcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAxNXB4O1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCA1MDBtcyBlYXNlLWluLW91dDtcbiAgICB9XG4gICAgc3BhbjpiZWZvcmUge1xuICAgICAgICB0b3A6IC0xMHB4O1xuICAgIH1cbiAgICBzcGFuOmFmdGVyIHtcbiAgICAgICAgdG9wOiBhdXRvO1xuICAgICAgICBib3R0b206IC0xMHB4O1xuICAgIH1cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgc3BhbixcbiAgICAgICAgc3BhbjpiZWZvcmUsXG4gICAgICAgIHNwYW46YWZ0ZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJGRlZmF1bHQtaG92ZXItY29sb3I7XG4gICAgICAgIH1cbiAgICB9XG59XG4ubmF2QWN0aXZlIC5oYW1idXJnZXIge1xuXG4gICAgc3BhbiB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIH1cbiAgICBzcGFuOmJlZm9yZSxcbiAgICBzcGFuOmFmdGVyIHtcbiAgICAgICAgdG9wOiAwO1xuICAgIH1cbiAgICBzcGFuOmJlZm9yZSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICB9XG4gICAgc3BhbjphZnRlciB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gICAgfVxuICAgICY6aG92ZXIge1xuICAgICAgICBzcGFuOmJlZm9yZSxcbiAgICAgICAgc3BhbjphZnRlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkZGVmYXVsdC1ob3Zlci1jb2xvcjtcbiAgICAgICAgfVxuICAgIH1cbn0iLCIvL1xuLy8gTGlzdCBzdHlsZXNcbi8vXG5cbi8vIFVub3JkZXJlZCBhbmQgT3JkZXJlZCBsaXN0c1xudWwsIG9sIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBsaSB7XG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgfVxufVxuXG4ubGlzdC11bnN0eWxlZCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi5saXN0LWlubGluZSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgPiBsaSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG59IiwiI3RvVG9wIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xuICAgIHotaW5kZXg6IDEwMDA7XG4gICAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlIDBzO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBsaW5lLWhlaWdodDogNjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICAgIGNvbG9yOiAkZGVmYXVsdC1saW5rLWNvbG9yO1xufSIsIi5tYWluLXNsaWRlcyB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgPiBsaSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB6LWluZGV4OiAgIDE7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICAgICAgJi50aXRsZSB7XG4gICAgICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICAgICAgdG9wOiA0MCU7XG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XG5cbiAgICAgICAgICAgIGgxIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6ICRtYXgtcGFnZS13aWR0aDtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDMwcHg7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRsaWdodC10ZXh0LWNvbG9yO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xuXG4gICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNTBweCkge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDZ2dztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogN3Z3O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDh2dztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuIiwiLnNlY3Rpb24tY29udGFpbmVyIHtcbiAgICBoMSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY29sb3I6ICRzZWN0aW9uLWhlYWRlci1jb2xvcjtcbiAgICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgICAgICBwYWRkaW5nOiA0MHB4IDA7XG5cbiAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogXCIvL1wiO1xuICAgICAgICAgICAgZm9udC1zaXplOiBib2xkO1xuICAgICAgICAgICAgcGFkZGluZzogMCAyMHB4O1xuICAgICAgICAgICAgY29sb3I6IHJlZDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4uYmxvY2stY29udGFpbmVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7XG59XG5cblxuLnNlcmllcy1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAwcHg7XG4gICAgbWluLWhlaWdodDogNTAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtaW4taGVpZ2h0OiAwO1xuICAgIH1cblxuICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgfVxuXG4gICAgPiAqIHtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4uc2VyaWVzLWNvbnRhaW5lcjpudGgtY2hpbGQoZXZlbikge1xuICAgIC5zZXJpZXMtYXJ0d29yayB7XG4gICAgICAgIG9yZGVyOiAyXG4gICAgfVxufVxuXG4uc2VyaWVzLWRlc2NyaXB0aW9uIHtcbiAgICBwYWRkaW5nOiAzMHB4O1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgICAgICBwYWRkaW5nLXRvcDogMDtcblxuICAgICAgICBoMiB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cbi5zZXJpZXMtYXJ0d29yayB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICAgIHdpZHRoOiA4MHZ3O1xuICAgICAgICBoZWlnaHQ6IDgwdnc7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvIDMwcHg7XG5cbiAgICAgICAgJi5oYXMtYm9yZGVyIHtcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxpIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIG9wYWNpdHk6IDA7XG5cbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cbi5hYm91dC1jb250YWluZXIge1xuICAgIG1heC13aWR0aDogMTYwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMDBweDtcblxuICAgIC5hYm91dC1kZXNjcmlwdGlvbiB7XG4gICAgICAgIHBhZGRpbmc6IDMwcHg7XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgICAgIG1hcmdpbjogMCAwIDMwcHggNTBweDtcblxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDAgYXV0byA1MHB4O1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICAgIGZsb2F0OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmNvbnRhY3QtY29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDMwMHB4O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2Fzc2V0cy9pbWFnZXMvc2l0ZS1pbWFnZXMvY29udGFjdC1iZy5qcGcnKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogJGxpZ2h0LXRleHQtY29sb3I7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcblxuICAgIGgxIHtcbiAgICAgICAgY29sb3I6ICRsaWdodC10ZXh0LWNvbG9yO1xuICAgIH1cbn0iXX0= */
