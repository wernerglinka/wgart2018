@import url("https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700");
* {
  box-sizing: border-box; }

*:before,
*:after {
  box-sizing: inherit; }

body {
  font-family: "Roboto", sans-serif;
  font-size: 100%;
  color: #333;
  background-color: #fff;
  padding: 0;
  margin: 0; }

h1, h2, h3, h4 {
  font-family: "Montserrat", sans-serif; }

h1 {
  font-size: 1.75em;
  font-weight: 300; }

h2 {
  font-size: 1.5em;
  font-weight: 300; }

h3 {
  color: #333;
  font-size: 1em;
  font-weight: 600;
  line-height: 1.5625;
  margin-bottom: 0; }

h1 + h4 {
  font-size: 1.25em;
  font-weight: 600; }

p {
  color: #333;
  font-size: 1em;
  line-height: 1.4;
  font-weight: 300; }
  p.center {
    text-align: center; }

input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

a {
  color: #f00;
  text-decoration: none;
  cursor: pointer;
  transition: color, background-color 0.5s; }
  a:hover, a:focus {
    text-decoration: none; }

.clearfix:before, .clearfix:after,
.container:before,
.container:after {
  content: " ";
  display: table; }

.clearfix:after,
.container:after {
  clear: both; }

.container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 30px; }

img {
  max-width: 100%;
  height: auto;
  display: inline-block; }

hr {
  margin: 1em 0; }

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0; }

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto; }

[role="button"] {
  cursor: pointer; }

.pull-left {
  float: left; }

.pull-right {
  float: right; }

[disabled],
.is-disabled {
  color: #ccc !important; }

.has-highlight {
  background-color: #f4f4f4 !important; }

.nowrap {
  white-space: nowrap;
  font-size: 1em !important; }

blockquote {
  padding: 20px;
  background-color: #f5f5f5;
  font-style: italic; }

.wide-screen-only {
  display: block; }

.narrow-screen-only {
  display: none; }

@media (max-width: 768px) {
  .wide-screen-only {
    display: none; }
  .narrow-screen-only {
    display: block; } }

.loader,
.loader:after {
  border-radius: 50%;
  width: 10em;
  height: 10em; }

.loader {
  margin: 60px auto;
  font-size: 10px;
  position: relative;
  text-indent: -9999em;
  border-top: 1.1em solid rgba(239, 22, 20, 0.2);
  border-right: 1.1em solid rgba(239, 22, 20, 0.2);
  border-bottom: 1.1em solid rgba(239, 22, 20, 0.2);
  border-left: 1.1em solid #ef1614;
  transform: translateZ(0);
  animation: load8 1.1s infinite linear; }

@keyframes load8 {
  0% {
    transform: rotate(0deg); }
  100% {
    transform: rotate(360deg); } }

.top-message {
  position: absolute;
  top: 0;
  z-index: 1000;
  width: 100%;
  height: 50px;
  line-height: 50px;
  padding: 0 20px;
  text-align: center;
  color: #333;
  background-color: rgba(51, 51, 51, 0.7);
  overflow: hidden;
  border-bottom: 1px solid #fff; }
  .top-message span {
    display: inline;
    font-family: "Roboto", sans-serif;
    font-weight: 300;
    font-size: 1.125em;
    line-height: inherit;
    color: inherit;
    text-decoration: none; }
    .top-message span a {
      font-size: inherit; }

.navActive .top-message {
  display: none; }

header {
  position: fixed;
  top: 0;
  z-index: 1000;
  width: 100%;
  height: 80px;
  background-color: rgba(51, 51, 51, 0.5);
  transition: background-color 0.5s; }

.main-logo {
  float: left;
  line-height: 80px;
  font-family: "Montserrat", sans-serif;
  font-size: 32px;
  color: #fff; }
  @media (max-width: 375px) {
    .main-logo {
      font-size: 24px; } }

.top-message + header {
  position: absolute;
  top: 50px; }
  .top-message + header.isFixed {
    position: fixed;
    top: 0;
    z-index: 1000; }

.main-navigation {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  padding-bottom: 50px;
  background-color: rgba(51, 51, 51, 0.97);
  margin: 0 0;
  display: none; }
  .main-navigation .main-menu {
    height: 100%;
    overflow: scroll;
    padding: 0 40px 80px;
    float: none;
    margin-top: 200px;
    transition: all 1s; }
    .main-navigation .main-menu > li a, .main-navigation .main-menu > li span {
      display: block;
      font-size: 1.5em;
      line-height: 3em;
      color: #f00;
      padding-left: 30px; }
      .main-navigation .main-menu > li a:hover, .main-navigation .main-menu > li span:hover {
        cursor: pointer;
        background-color: rgba(0, 0, 0, 0.7); }
    .main-navigation .main-menu .dropdown-menu {
      position: static;
      float: none;
      border: none;
      padding-bottom: 20px;
      background: none; }
      .main-navigation .main-menu .dropdown-menu a {
        font-size: 1.14286em;
        line-height: 3em;
        color: #f00;
        padding-left: 60px; }
  .main-navigation li {
    display: block; }
    .main-navigation li.has-bottom-border {
      border-bottom: 1px solid #f00; }

.top-message + header .main-navigation {
  top: 150px; }

.navActive {
  overflow: hidden; }
  .navActive header {
    background-color: rgba(51, 51, 51, 0.97); }
  .navActive .mobile-navigation .main-menu {
    margin-top: 150px; }
    .navActive .mobile-navigation .main-menu > li > a .icon,
    .navActive .mobile-navigation .main-menu > li > span .icon {
      font-size: 18px;
      line-height: 34px; }
      .navActive .mobile-navigation .main-menu > li > a .icon.icon-chevron-south, .navActive .mobile-navigation .main-menu > li > a .icon.icon-chevron-east,
      .navActive .mobile-navigation .main-menu > li > span .icon.icon-chevron-south,
      .navActive .mobile-navigation .main-menu > li > span .icon.icon-chevron-east {
        display: inline-block; }
      .navActive .mobile-navigation .main-menu > li > a .icon.icon-chevron-north,
      .navActive .mobile-navigation .main-menu > li > span .icon.icon-chevron-north {
        display: none; }
    .navActive .mobile-navigation .main-menu > li.stayOpen > a .icon.icon-chevron-south,
    .navActive .mobile-navigation .main-menu > li.stayOpen > span .icon.icon-chevron-south {
      display: none; }
    .navActive .mobile-navigation .main-menu > li.stayOpen > a .icon.icon-chevron-north,
    .navActive .mobile-navigation .main-menu > li.stayOpen > span .icon.icon-chevron-north {
      display: inline-block; }

.hamburger {
  position: relative;
  top: 20px;
  float: right;
  width: 35px;
  height: 35px;
  cursor: pointer;
  background: none;
  border: none; }
  .hamburger:focus {
    outline: 0; }
  .hamburger span,
  .hamburger span:before,
  .hamburger span:after {
    cursor: pointer;
    border-radius: 1px;
    height: 3px;
    width: 35px;
    background: white;
    position: absolute;
    top: 15px;
    display: block;
    content: '';
    transition: all 500ms ease-in-out; }
  .hamburger span:before {
    top: -10px; }
  .hamburger span:after {
    top: auto;
    bottom: -10px; }
  .hamburger:hover span,
  .hamburger:hover span:before,
  .hamburger:hover span:after {
    background: #f00; }

.navActive .hamburger span {
  background-color: transparent; }

.navActive .hamburger span:before,
.navActive .hamburger span:after {
  top: 0; }

.navActive .hamburger span:before {
  transform: rotate(45deg); }

.navActive .hamburger span:after {
  transform: rotate(-45deg); }

.navActive .hamburger:hover span:before,
.navActive .hamburger:hover span:after {
  background: #f00; }

ul, ol {
  margin: 0;
  padding: 0; }
  ul li, ol li {
    color: inherit;
    padding: 0;
    margin: 0; }

.list-unstyled {
  list-style: none; }

.list-inline {
  list-style: none; }
  .list-inline > li {
    display: inline-block; }

#toTop {
  display: block;
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 1000;
  transition: all .5s ease 0s;
  cursor: pointer;
  width: 60px;
  height: 60px;
  border: 1px solid #ccc;
  line-height: 60px;
  text-align: center;
  background-color: rgba(255, 255, 255, 0.8);
  color: #f00; }

.main-slides {
  height: 100vh;
  width: 100vw;
  position: relative; }
  .main-slides > li {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    width: 100%;
    height: 100%; }
    .main-slides > li.title {
      z-index: 2;
      top: 40%; }
      .main-slides > li.title h1 {
        max-width: 1280px;
        margin: 0 auto;
        padding: 0 30px;
        text-align: right;
        color: #fff;
        font-size: 5vw; }
        @media (max-width: 1250px) {
          .main-slides > li.title h1 {
            font-size: 6vw; } }
        @media (max-width: 1000px) {
          .main-slides > li.title h1 {
            font-size: 7vw; } }
        @media (max-width: 600px) {
          .main-slides > li.title h1 {
            font-size: 8vw; } }
    .main-slides > li img {
      width: 100%;
      height: 100%;
      object-fit: cover; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
